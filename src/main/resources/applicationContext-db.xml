<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
    	">

        <!-- 读取配置文件  -->
        <context:property-placeholder location="classpath:jdbc.properties" />

        <!--  数据库连接池 -->
        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
            <!-- 基本参数 -->
            <property name="driverClassName" value="${jdbc.driver}"/>
            <property name="url" value="${jdbc.url}"/>
            <property name="username" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>

            <!-- 最大数量、初始化参数、最小数量 -->
            <property name="maxActive" value="${jdbc.maxActive}"/>
            <property name="initialSize" value="${jdbc.initialSize}"/>
            <property name="minIdle" value="${jdbc.minIdle}"/>

            <!-- 获取连接等待的超时时间 -->
            <property name="maxWait" value="${jdbc.maxWait}"/>

            <!-- 多久检测需要被关闭的空闲连接 -->
            <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}"/>

            <!-- 一个连接在池中生存的最小时间 -->
            <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"/>

            <!-- 属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
                 监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall -->
            <property name="filters" value="stat,wall,log4j"/>

            <!-- 用来检测连接是否有效的sql，要求是一个查询语句。
            如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。 -->
            <property name="validationQuery" value="select 1"/>
            <!--  	建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，
                    如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。 -->
            <property name="testWhileIdle" value="true" />
            <!-- 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。 -->
            <property name="testOnBorrow" value="false" />
            <!-- 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
            <property name="testOnReturn" value="false" />

            <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
            <!-- 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。 -->
            <property name="poolPreparedStatements" value="false" />
            <!--<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />-->

        </bean>

</beans>